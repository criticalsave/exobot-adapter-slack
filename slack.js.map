{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///slack.js","webpack:///webpack/bootstrap 6383f69135eb532b9f09","webpack:///external \"lodash\"","webpack:///external \"inherits\"","webpack:///./~/@slack/client/lib/models/model.js","webpack:///./~/@slack/client/lib/models/channel-group.js","webpack:///./~/@slack/client/lib/models/base-channel.js","webpack:///./~/@slack/client/lib/models/channel.js","webpack:///./~/@slack/client/lib/models/dm.js","webpack:///./~/@slack/client/lib/models/file.js","webpack:///./~/@slack/client/lib/models/group.js","webpack:///./~/@slack/client/lib/models/mpdm.js","webpack:///./~/@slack/client/lib/models/user-group.js","webpack:///./~/@slack/client/lib/models/user.js","webpack:///./~/@slack/client/lib/models/index.js","webpack:///external \"@exoplay/exobot\"","webpack:///external \"@slack/client\"","webpack:///./~/@slack/client/lib/models/helpers.js","webpack:///./~/@slack/client/lib/models/property-type.js","webpack:///./src/slack.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","o","object","property","prototype","hasOwnProperty","p","s","Model","opts","_properties","_modelName","_setProperties","isEmpty","forEach","bind","has","isArray","isObject","map","mapValues","PROPERTY_TYPES","helpers","update","_setModelProperty","val","key","_setObjectProperty","_setArrayProperty","SIMPLE","ModelClass","hasProperty","isModelObj","getModelClass","MODEL","firstItem","item","MODEL_ARRAY","toJSON","objRepresentation","res","arrVal","inherits","BaseChannel","ChannelGroup","objectName","history","_typing","unreadCount","lastRead","_maxTs","forEachRight","find","findLastIndex","keys","USER_TYPING_TIMEOUT","super_","latest","addMessage","startedTyping","userId","clearTimeout","setTimeout","recalcUnreads","continueIterating","message","ts","getType","toLowerCase","getTypingUsers","getMessageByTs","push","hidden","updateMessage","messageUpdatedMsg","msgIndex","Channel","DM","File","Group","MPDM","UserGroup","User","hasKey","RECOGNIZED_API_TYPE_PREFIXES","obj","indexOf","id","substr","modelClass","apiTypePrefix","is_mpim","is_group","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_defineProperty","__WEBPACK_IMPORTED_MODULE_0__slack_client__","__WEBPACK_IMPORTED_MODULE_0__slack_client___default","__esModule","__WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__","__WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models___default","__WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__","__WEBPACK_IMPORTED_MODULE_2__exoplay_exobot___default","EVENTS","SlackAdapter","_EVENTS","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","dmName","a","RTM","CONNECTING","RTM_CONNECTION_OPENED","AUTHENTICATED","DISCONNECT","UNABLE_TO_RTM_START","ATTEMPTING_RECONNECT","MESSAGE","_Adapter","_ref","token","_this","apply","arguments","slackConnecting","bot","log","info","status","STATUS","slackConnected","slackAuthenticated","notice","CONNECTED","slackDisconnected","critical","DISCONNECTED","slackUnableToStart","slackReconnecting","RECONNECTING","slackMessage","botId","client","activeUserId","user","slackUser","dataStore","getUserById","channel","getChannelGroupOrDMById","receiveWhisper","text","receive","_this2","logLevel","slackEvent","mappedFn","on","_bot$emitter","_len","args","Array","_key","emitter","emit","concat","start","debug","sendMessage","getUserByName"],"mappings":"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","file":"slack.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"@slack/client\"), require(\"inherits\"), require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"@slack/client\", \"inherits\", \"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"slack.js\"] = factory(require(\"@exoplay/exobot\"), require(\"@slack/client\"), require(\"inherits\"), require(\"lodash\"));\n\telse\n\t\troot[\"slack.js\"] = factory(root[\"@exoplay/exobot\"], root[\"@slack/client\"], root[\"inherits\"], root[\"lodash\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"@slack/client\"), require(\"inherits\"), require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"@slack/client\", \"inherits\", \"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"slack.js\"] = factory(require(\"@exoplay/exobot\"), require(\"@slack/client\"), require(\"inherits\"), require(\"lodash\"));\n\telse\n\t\troot[\"slack.js\"] = factory(root[\"@exoplay/exobot\"], root[\"@slack/client\"], root[\"inherits\"], root[\"lodash\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 17);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"inherits\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar forEach = __webpack_require__(0).forEach;\nvar bind = __webpack_require__(0).bind;\nvar has = __webpack_require__(0).has;\nvar isArray = __webpack_require__(0).isArray;\nvar isEmpty = __webpack_require__(0).isEmpty;\nvar isObject = __webpack_require__(0).isObject;\nvar map = __webpack_require__(0).map;\nvar mapValues = __webpack_require__(0).mapValues;\n\nvar PROPERTY_TYPES = __webpack_require__(16);\nvar helpers = __webpack_require__(15);\n\n\nfunction Model(name, opts) {\n  /**\n   *\n   * @type {Object}\n   * @protected\n   */\n  this._properties = {};\n\n  /**\n   * The name of the model.\n   * @type {string}\n   * @private\n   */\n  this._modelName = name;\n\n  this._setProperties(isEmpty(opts) ? {} : opts);\n}\n\n\n/**\n * Updates the model.\n * @param {Object} opts\n * @return {Object} The model object that was just updated.\n */\nModel.prototype.update = function update(opts) {\n  this._setProperties(opts);\n  return this;\n};\n\n\n/**\n * Assigns all properties from the supplied opts object to the model.\n *\n * Subclasses of the model class have the opportunity to intelligently set defaults or assign values\n * via individual assignment calls by extending this method on the subclass.\n *\n * @param {Object} opts\n * @private\n */\nModel.prototype._setProperties = function setProperties(opts) {\n  forEach(opts, bind(this._setModelProperty, this));\n};\n\n\n/**\n * Assigns an individual property from a Slack API response to a model object.\n *\n * Property assignment works by:\n *   1. If the property does not exist, set the property.\n *   2. If the property exists on the model, and is a scalar, overwrite the property with the\n *      property from the opts object\n *   3. If the property exists on the model and is a complex property:\n *      * if it's an object, extend the model property with values from the opts property\n *      * if it's an array, overwrite the array. This is because it's currently unclear if there are\n *        any array properties that will only be partially filled by some RTM / API responses, but\n *        completely filled by others.\n *\n * @param {String} key\n * @param {*} val\n *cchnnihbtckbllbflvffbvrgelvkufcruclebldbdtbb\n * @private\n */\nModel.prototype._setModelProperty = function _setModelProperty(val, key) {\n  if (isObject(val)) {\n    this._setObjectProperty(key, val);\n  } else if (isArray(val)) {\n    this._setArrayProperty(key, val);\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\n/**\n * Sets an object property from the API on a model object.\n *\n * NOTE: this assumes that none of the values of the object from the API represent additional model\n *       objects, i.e. that {relevantChannel: {channelObject}} will never occur in the API response.\n *\n * @param key\n * @param val\n *\n * @private\n */\nModel.prototype._setObjectProperty = function _setObjectProperty(key, val) {\n  var hasProperty = has(this, key);\n  var ModelClass;\n\n  if (helpers.isModelObj(val)) {\n    if (hasProperty) {\n      this[key].update(val);\n    } else {\n      ModelClass = helpers.getModelClass();\n      this[key] = new ModelClass(val);\n    }\n    this._properties[key] = PROPERTY_TYPES.MODEL;\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\n/**\n *\n * @param key\n * @param val\n *\n * @private\n */\nModel.prototype._setArrayProperty = function _setArrayProperty(key, val) {\n  var ModelClass;\n  var firstItem;\n\n  // NOTE: This assumes that it's not necessary to search and update model values in arrays and\n  //       that instead they can be over-written\n  if (!isEmpty(val)) {\n    // Assumes that all values in the array are of the same type\n    firstItem = val[0];\n    if (helpers.isModelObj(firstItem)) {\n      ModelClass = helpers.getModelClass();\n      this[key] = map(val, function makeChildModelObjs(item) {\n        return new ModelClass(item);\n      });\n      this._properties[key] = PROPERTY_TYPES.MODEL_ARRAY;\n    } else {\n      this._properties[key] = PROPERTY_TYPES.SIMPLE;\n      this[key] = val;\n    }\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\nModel.prototype.toJSON = function toJSON() {\n  var objRepresentation = mapValues(this._properties, bind(function mapModelPropsToJSON(val, key) {\n    var res;\n\n    if (val === PROPERTY_TYPES.MODEL) {\n      res = this[key].toJSON();\n    } else if (val === PROPERTY_TYPES.MODEL_ARRAY) {\n      res = map(this[key], function mapModelArrayPropertyToJSON(arrVal) {\n        return arrVal.toJSON();\n      });\n    } else {\n      res = this[key];\n    }\n\n    return res;\n  }, this));\n\n  return objRepresentation;\n};\n\n\nmodule.exports = Model;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar inherits = __webpack_require__(1);\n\nvar BaseChannel = __webpack_require__(4);\n\n\nvar ChannelGroup = function ChannelGroup(name, opts) {\n  BaseChannel.call(this, name, opts);\n};\n\ninherits(ChannelGroup, BaseChannel);\n\n\nmodule.exports = ChannelGroup;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar bind = __webpack_require__(0).bind;\nvar forEachRight = __webpack_require__(0).forEachRight;\nvar find = __webpack_require__(0).find;\nvar findLastIndex = __webpack_require__(0).findLastIndex;\nvar inherits = __webpack_require__(1);\nvar keys = __webpack_require__(0).keys;\n\nvar Model = __webpack_require__(2);\n\n\nfunction BaseChannel(objectName, opts) {\n  /**\n   *\n   * @type {Array}\n   */\n  this.history = [];\n\n  /**\n   * Object, keyed on user id, values of timeouts that will be run to clear the user typing state.\n   * @type {{}}\n   * @private\n   */\n  this._typing = {};\n\n  /**\n   *\n   */\n  this.unreadCount = 0;\n\n\n  /**\n   * @type {string}\n   */\n  this.lastRead = '0000000000.000000';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this._maxTs = '0000000000.000000';\n\n  Model.call(this, objectName, opts);\n}\n\ninherits(BaseChannel, Model);\n\n\n/**\n * The timeout after which the user typing entry should be removed.\n * @type {number}\n */\nBaseChannel.prototype.USER_TYPING_TIMEOUT = 5000;\n\n\nBaseChannel.prototype._setProperties = function setProperties(opts) {\n  BaseChannel.super_.prototype._setProperties.call(this, opts);\n\n  if (this.latest) {\n    this.addMessage(this.latest);\n  }\n};\n\n\n/**\n *\n * @param {string} userId\n */\nBaseChannel.prototype.startedTyping = function startedTyping(userId) {\n  if (this._typing[userId]) {\n    clearTimeout(this._typing[userId]);\n  }\n\n  this._typing[userId] = setTimeout(bind(function removeSetTypingTimeout() {\n    delete this._typing[userId];\n  }, this), this.USER_TYPING_TIMEOUT);\n};\n\n\n/**\n *\n * @returns {number}\n */\nBaseChannel.prototype.recalcUnreads = function recalcUnreads() {\n  var continueIterating = true;\n  this.unreadCount = 0;\n\n  forEachRight(this.history, bind(function checkMessageIsUnread(message) {\n    if (message.ts > this.lastRead) {\n      this.unreadCount++;\n    } else {\n      continueIterating = false;\n    }\n\n    return continueIterating;\n  }, this));\n\n  return this.unreadCount;\n};\n\n\n/**\n * Returns the string form of the channel type.\n * @return {string}\n */\nBaseChannel.prototype.getType = function getType() {\n  return this._modelName.toLowerCase();\n};\n\n\n/**\n * Returns an array of user ids for all users who are currently typing.\n * @return {Array.<string>}\n */\nBaseChannel.prototype.getTypingUsers = function getTypingUsers() {\n  return keys(this._typing);\n};\n\n\n/**\n *\n * @param ts\n */\nBaseChannel.prototype.getMessageByTs = function getMessageByTs(ts) {\n  // This has the potential to get really slow, but ok for now I guess...\n  return find(this.history, { ts: ts });\n};\n\n\n/**\n *\n * @param {Object} message\n */\nBaseChannel.prototype.addMessage = function addMessage(message) {\n  // TODO(leah): Do a reverse walk of this and compare the timestamps as an extra guarantee?\n  this.history.push(message);\n\n  if (message.ts > this._maxTs && !message.hidden) {\n    this._maxTs = message.ts;\n    this.unreadCount++;\n  }\n};\n\n\nBaseChannel.prototype.updateMessage = function updateMessage(messageUpdatedMsg) {\n  var message = messageUpdatedMsg.message;\n  var msgIndex = findLastIndex(this.history, 'ts', message.ts);\n  if (msgIndex !== -1) {\n    this.history[msgIndex] = message;\n  }\n};\n\n\nmodule.exports = BaseChannel;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * {@link https://api.slack.com/types/channel|Channel}\n */\n\nvar inherits = __webpack_require__(1);\n\nvar ChannelGroup = __webpack_require__(3);\n\n\nvar Channel = function Channel(opts) {\n  ChannelGroup.call(this, 'Channel', opts);\n};\n\ninherits(Channel, ChannelGroup);\n\n\nmodule.exports = Channel;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * {@link https://api.slack.com/types/im|DM}\n */\n\nvar inherits = __webpack_require__(1);\n\nvar BaseChannel = __webpack_require__(4);\n\n\nfunction DM(opts) {\n  BaseChannel.call(this, 'DM', opts);\n}\n\ninherits(DM, BaseChannel);\n\n\nmodule.exports = DM;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar inherits = __webpack_require__(1);\n\nvar Model = __webpack_require__(2);\n\n\nfunction File(opts) {\n  Model.call(this, 'File', opts);\n}\n\ninherits(File, Model);\n\n\nmodule.exports = File;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * {@link https://api.slack.com/types/group|Group}\n */\n\nvar inherits = __webpack_require__(1);\n\nvar ChannelGroup = __webpack_require__(3);\n\n\nfunction Group(opts) {\n  ChannelGroup.call(this, 'Group', opts);\n}\n\ninherits(Group, ChannelGroup);\n\n\nmodule.exports = Group;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar inherits = __webpack_require__(1);\n\nvar ChannelGroup = __webpack_require__(3);\n\n\nfunction MPDM(opts) {\n  ChannelGroup.call(this, 'MPDM', opts);\n}\n\ninherits(MPDM, ChannelGroup);\n\n\nmodule.exports = MPDM;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar inherits = __webpack_require__(1);\n\nvar Model = __webpack_require__(2);\n\n\nfunction UserGroup(opts) {\n  Model.call(this, 'UserGroup', opts);\n}\n\ninherits(UserGroup, Model);\n\n\nmodule.exports = UserGroup;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n *\n */\n\nvar inherits = __webpack_require__(1);\n\nvar Model = __webpack_require__(2);\n\n\nfunction User(opts) {\n  Model.call(this, 'User', opts);\n}\n\ninherits(User, Model);\n\n\nmodule.exports = User;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  Channel: __webpack_require__(5),\n  DM: __webpack_require__(6),\n  File: __webpack_require__(7),\n  Group: __webpack_require__(8),\n  MPDM: __webpack_require__(9),\n  User: __webpack_require__(11),\n  UserGroup: __webpack_require__(10)\n};\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@exoplay/exobot\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@slack/client\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar hasKey = __webpack_require__(0).has;\n\n// Channel, file, group, DM, user, usergroup\nvar RECOGNIZED_API_TYPE_PREFIXES = ['C', 'F', 'G', 'D', 'U', 'S'];\n\n\n/**\n * Tests whether a supplied JSON object represents a Slack API type.\n * @param {Object} obj\n * @returns {boolean}\n */\nvar isModelObj = function isModelObj(obj) {\n  if (hasKey(obj, 'id')) {\n    return RECOGNIZED_API_TYPE_PREFIXES.indexOf(obj.id.substr(0, 1)) !== -1;\n  }\n\n  return false;\n};\n\n\n/**\n * Returns the model class for the JSON object from the Slack API.\n */\nvar getModelClass = function getModelClass(obj) {\n  var modelClass;\n  var apiTypePrefix = obj.id.substr(0, 1);\n\n  if (apiTypePrefix === 'C') {\n    modelClass = __webpack_require__(5);\n  } else if (apiTypePrefix === 'F') {\n    modelClass = __webpack_require__(7);\n  } else if (apiTypePrefix === 'D') {\n    modelClass = __webpack_require__(6);\n  } else if (apiTypePrefix === 'U') {\n    modelClass = __webpack_require__(11);\n  } else if (apiTypePrefix === 'S') {\n    modelClass = __webpack_require__(10);\n  } else {\n    // The MPDM and Group classes share the same prefix, so do an extra check here\n    if (apiTypePrefix === 'G') {\n      if (obj.is_mpim) {\n        modelClass = __webpack_require__(9);\n      }\n\n      if (obj.is_group) {\n        modelClass = __webpack_require__(8);\n      }\n    }\n  }\n\n  return modelClass;\n};\n\n\nmodule.exports.isModelObj = isModelObj;\nmodule.exports.getModelClass = getModelClass;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\nvar PROPERTY_TYPES = {\n  SIMPLE: 0,\n  MODEL: 1,\n  MODEL_ARRAY: 2\n};\n\nmodule.exports = PROPERTY_TYPES;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__slack_client__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__slack_client___default = __WEBPACK_IMPORTED_MODULE_0__slack_client__ && __WEBPACK_IMPORTED_MODULE_0__slack_client__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0__slack_client__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0__slack_client__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0__slack_client___default, 'a', __WEBPACK_IMPORTED_MODULE_0__slack_client___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models___default = __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__ && __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models___default, 'a', __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot___default = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__ && __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_2__exoplay_exobot___default, 'a', __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot___default);\n\n/* harmony export */ __webpack_require__.d(exports, \"EVENTS\", function() { return EVENTS; });\n/* harmony export */ __webpack_require__.d(exports, \"SlackAdapter\", function() { return SlackAdapter; });var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _EVENTS;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar dmName = new __WEBPACK_IMPORTED_MODULE_1__slack_client_lib_models___default.a.DM()._modelName;\n\nvar EVENTS = (_EVENTS = {}, _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.CONNECTING, 'slackConnecting'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.RTM_CONNECTION_OPENED, 'slackConnected'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.AUTHENTICATED, 'slackAuthenticated'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.DISCONNECT, 'slackDisconnected'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.UNABLE_TO_RTM_START, 'slackUnableToStart'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"CLIENT_EVENTS\"].RTM.ATTEMPTING_RECONNECT, 'slackReconnecting'), _defineProperty(_EVENTS, __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"RTM_EVENTS\"].MESSAGE, 'slackMessage'), _EVENTS);\n\nvar SlackAdapter = function (_Adapter) {\n  _inherits(SlackAdapter, _Adapter);\n\n  function SlackAdapter(_ref) {\n    var token = _ref.token;\n\n    _classCallCheck(this, SlackAdapter);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SlackAdapter).apply(this, arguments));\n\n    _this.name = 'Slack';\n\n    _this.slackConnecting = function () {\n      _this.bot.log.info('Connecting to Slack.');\n      _this.status = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTING;\n    };\n\n    _this.slackConnected = function () {\n      _this.bot.log.info('Connected to Slack.');\n    };\n\n    _this.slackAuthenticated = function () {\n      _this.bot.log.notice('Successfully authenticated to Slack.');\n      _this.status = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n    };\n\n    _this.slackDisconnected = function () {\n      _this.bot.log.critical('Disconnected from Slack.');\n      _this.status = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n    };\n\n    _this.slackUnableToStart = function () {\n      _this.bot.log.critical('Unable to start Slack.');\n      _this.status = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n    };\n\n    _this.slackReconnecting = function () {\n      _this.bot.log.notice('Reconnecting to Slack.');\n      _this.status = __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"].STATUS.RECONNECTING;\n    };\n\n    _this.slackMessage = function (message) {\n      var botId = _this.client.activeUserId;\n      if (message.user === botId) {\n        return;\n      }\n\n      var slackUser = _this.client.dataStore.getUserById(message.user);\n      var user = void 0;\n\n      if (slackUser) {\n        user = new __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"User\"](slackUser.name, slackUser.id);\n      } else {\n        user = new __WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"User\"](message.user);\n      }\n\n      var channel = _this.client.dataStore.getChannelGroupOrDMById(message.channel);\n\n      if (channel && channel._modelName === dmName) {\n        return _this.receiveWhisper({ user: user, text: message.text, channel: message.channel });\n      }\n\n      _this.receive({ user: user, text: message.text, channel: message.channel });\n    };\n\n    _this.token = token;\n    return _this;\n  }\n\n  _createClass(SlackAdapter, [{\n    key: 'register',\n    value: function register(bot) {\n      var _this2 = this;\n\n      _get(Object.getPrototypeOf(SlackAdapter.prototype), 'register', this).apply(this, arguments);\n      var token = this.token;\n\n\n      this.client = new __WEBPACK_IMPORTED_MODULE_0__slack_client__[\"RtmClient\"](token, { logLevel: bot.logLevel });\n\n      Object.keys(EVENTS).forEach(function (slackEvent) {\n        var mappedFn = _this2[EVENTS[slackEvent]];\n        _this2.client.on(slackEvent, function () {\n          return mappedFn.apply(undefined, arguments);\n        });\n        _this2.client.on(slackEvent, function () {\n          var _bot$emitter;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_bot$emitter = bot.emitter).emit.apply(_bot$emitter, ['slack-' + slackEvent].concat(args));\n        });\n      });\n\n      this.client.start();\n    }\n  }, {\n    key: 'send',\n    value: function send(message) {\n      this.bot.log.debug('Sending ' + message.text + ' to ' + message.channel);\n      this.client.sendMessage(message.text, message.channel);\n    }\n  }, {\n    key: 'getUserIdByUserName',\n    value: function getUserIdByUserName(name) {\n      return this.client.dataStore.getUserByName(name).id;\n    }\n  }]);\n\n  return SlackAdapter;\n}(__WEBPACK_IMPORTED_MODULE_2__exoplay_exobot__[\"Adapter\"]);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// slack.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6383f69135eb532b9f09","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"inherits\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"inherits\"\n// module id = 1\n// module chunks = 0","/**\n *\n */\n\nvar forEach = require('lodash').forEach;\nvar bind = require('lodash').bind;\nvar has = require('lodash').has;\nvar isArray = require('lodash').isArray;\nvar isEmpty = require('lodash').isEmpty;\nvar isObject = require('lodash').isObject;\nvar map = require('lodash').map;\nvar mapValues = require('lodash').mapValues;\n\nvar PROPERTY_TYPES = require('./property-type');\nvar helpers = require('./helpers');\n\n\nfunction Model(name, opts) {\n  /**\n   *\n   * @type {Object}\n   * @protected\n   */\n  this._properties = {};\n\n  /**\n   * The name of the model.\n   * @type {string}\n   * @private\n   */\n  this._modelName = name;\n\n  this._setProperties(isEmpty(opts) ? {} : opts);\n}\n\n\n/**\n * Updates the model.\n * @param {Object} opts\n * @return {Object} The model object that was just updated.\n */\nModel.prototype.update = function update(opts) {\n  this._setProperties(opts);\n  return this;\n};\n\n\n/**\n * Assigns all properties from the supplied opts object to the model.\n *\n * Subclasses of the model class have the opportunity to intelligently set defaults or assign values\n * via individual assignment calls by extending this method on the subclass.\n *\n * @param {Object} opts\n * @private\n */\nModel.prototype._setProperties = function setProperties(opts) {\n  forEach(opts, bind(this._setModelProperty, this));\n};\n\n\n/**\n * Assigns an individual property from a Slack API response to a model object.\n *\n * Property assignment works by:\n *   1. If the property does not exist, set the property.\n *   2. If the property exists on the model, and is a scalar, overwrite the property with the\n *      property from the opts object\n *   3. If the property exists on the model and is a complex property:\n *      * if it's an object, extend the model property with values from the opts property\n *      * if it's an array, overwrite the array. This is because it's currently unclear if there are\n *        any array properties that will only be partially filled by some RTM / API responses, but\n *        completely filled by others.\n *\n * @param {String} key\n * @param {*} val\n *cchnnihbtckbllbflvffbvrgelvkufcruclebldbdtbb\n * @private\n */\nModel.prototype._setModelProperty = function _setModelProperty(val, key) {\n  if (isObject(val)) {\n    this._setObjectProperty(key, val);\n  } else if (isArray(val)) {\n    this._setArrayProperty(key, val);\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\n/**\n * Sets an object property from the API on a model object.\n *\n * NOTE: this assumes that none of the values of the object from the API represent additional model\n *       objects, i.e. that {relevantChannel: {channelObject}} will never occur in the API response.\n *\n * @param key\n * @param val\n *\n * @private\n */\nModel.prototype._setObjectProperty = function _setObjectProperty(key, val) {\n  var hasProperty = has(this, key);\n  var ModelClass;\n\n  if (helpers.isModelObj(val)) {\n    if (hasProperty) {\n      this[key].update(val);\n    } else {\n      ModelClass = helpers.getModelClass();\n      this[key] = new ModelClass(val);\n    }\n    this._properties[key] = PROPERTY_TYPES.MODEL;\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\n/**\n *\n * @param key\n * @param val\n *\n * @private\n */\nModel.prototype._setArrayProperty = function _setArrayProperty(key, val) {\n  var ModelClass;\n  var firstItem;\n\n  // NOTE: This assumes that it's not necessary to search and update model values in arrays and\n  //       that instead they can be over-written\n  if (!isEmpty(val)) {\n    // Assumes that all values in the array are of the same type\n    firstItem = val[0];\n    if (helpers.isModelObj(firstItem)) {\n      ModelClass = helpers.getModelClass();\n      this[key] = map(val, function makeChildModelObjs(item) {\n        return new ModelClass(item);\n      });\n      this._properties[key] = PROPERTY_TYPES.MODEL_ARRAY;\n    } else {\n      this._properties[key] = PROPERTY_TYPES.SIMPLE;\n      this[key] = val;\n    }\n  } else {\n    this._properties[key] = PROPERTY_TYPES.SIMPLE;\n    this[key] = val;\n  }\n};\n\n\nModel.prototype.toJSON = function toJSON() {\n  var objRepresentation = mapValues(this._properties, bind(function mapModelPropsToJSON(val, key) {\n    var res;\n\n    if (val === PROPERTY_TYPES.MODEL) {\n      res = this[key].toJSON();\n    } else if (val === PROPERTY_TYPES.MODEL_ARRAY) {\n      res = map(this[key], function mapModelArrayPropertyToJSON(arrVal) {\n        return arrVal.toJSON();\n      });\n    } else {\n      res = this[key];\n    }\n\n    return res;\n  }, this));\n\n  return objRepresentation;\n};\n\n\nmodule.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/model.js\n// module id = 2\n// module chunks = 0","/**\n *\n */\n\nvar inherits = require('inherits');\n\nvar BaseChannel = require('./base-channel');\n\n\nvar ChannelGroup = function ChannelGroup(name, opts) {\n  BaseChannel.call(this, name, opts);\n};\n\ninherits(ChannelGroup, BaseChannel);\n\n\nmodule.exports = ChannelGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/channel-group.js\n// module id = 3\n// module chunks = 0","/**\n *\n */\n\nvar bind = require('lodash').bind;\nvar forEachRight = require('lodash').forEachRight;\nvar find = require('lodash').find;\nvar findLastIndex = require('lodash').findLastIndex;\nvar inherits = require('inherits');\nvar keys = require('lodash').keys;\n\nvar Model = require('./model');\n\n\nfunction BaseChannel(objectName, opts) {\n  /**\n   *\n   * @type {Array}\n   */\n  this.history = [];\n\n  /**\n   * Object, keyed on user id, values of timeouts that will be run to clear the user typing state.\n   * @type {{}}\n   * @private\n   */\n  this._typing = {};\n\n  /**\n   *\n   */\n  this.unreadCount = 0;\n\n\n  /**\n   * @type {string}\n   */\n  this.lastRead = '0000000000.000000';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this._maxTs = '0000000000.000000';\n\n  Model.call(this, objectName, opts);\n}\n\ninherits(BaseChannel, Model);\n\n\n/**\n * The timeout after which the user typing entry should be removed.\n * @type {number}\n */\nBaseChannel.prototype.USER_TYPING_TIMEOUT = 5000;\n\n\nBaseChannel.prototype._setProperties = function setProperties(opts) {\n  BaseChannel.super_.prototype._setProperties.call(this, opts);\n\n  if (this.latest) {\n    this.addMessage(this.latest);\n  }\n};\n\n\n/**\n *\n * @param {string} userId\n */\nBaseChannel.prototype.startedTyping = function startedTyping(userId) {\n  if (this._typing[userId]) {\n    clearTimeout(this._typing[userId]);\n  }\n\n  this._typing[userId] = setTimeout(bind(function removeSetTypingTimeout() {\n    delete this._typing[userId];\n  }, this), this.USER_TYPING_TIMEOUT);\n};\n\n\n/**\n *\n * @returns {number}\n */\nBaseChannel.prototype.recalcUnreads = function recalcUnreads() {\n  var continueIterating = true;\n  this.unreadCount = 0;\n\n  forEachRight(this.history, bind(function checkMessageIsUnread(message) {\n    if (message.ts > this.lastRead) {\n      this.unreadCount++;\n    } else {\n      continueIterating = false;\n    }\n\n    return continueIterating;\n  }, this));\n\n  return this.unreadCount;\n};\n\n\n/**\n * Returns the string form of the channel type.\n * @return {string}\n */\nBaseChannel.prototype.getType = function getType() {\n  return this._modelName.toLowerCase();\n};\n\n\n/**\n * Returns an array of user ids for all users who are currently typing.\n * @return {Array.<string>}\n */\nBaseChannel.prototype.getTypingUsers = function getTypingUsers() {\n  return keys(this._typing);\n};\n\n\n/**\n *\n * @param ts\n */\nBaseChannel.prototype.getMessageByTs = function getMessageByTs(ts) {\n  // This has the potential to get really slow, but ok for now I guess...\n  return find(this.history, { ts: ts });\n};\n\n\n/**\n *\n * @param {Object} message\n */\nBaseChannel.prototype.addMessage = function addMessage(message) {\n  // TODO(leah): Do a reverse walk of this and compare the timestamps as an extra guarantee?\n  this.history.push(message);\n\n  if (message.ts > this._maxTs && !message.hidden) {\n    this._maxTs = message.ts;\n    this.unreadCount++;\n  }\n};\n\n\nBaseChannel.prototype.updateMessage = function updateMessage(messageUpdatedMsg) {\n  var message = messageUpdatedMsg.message;\n  var msgIndex = findLastIndex(this.history, 'ts', message.ts);\n  if (msgIndex !== -1) {\n    this.history[msgIndex] = message;\n  }\n};\n\n\nmodule.exports = BaseChannel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/base-channel.js\n// module id = 4\n// module chunks = 0","/**\n * {@link https://api.slack.com/types/channel|Channel}\n */\n\nvar inherits = require('inherits');\n\nvar ChannelGroup = require('./channel-group');\n\n\nvar Channel = function Channel(opts) {\n  ChannelGroup.call(this, 'Channel', opts);\n};\n\ninherits(Channel, ChannelGroup);\n\n\nmodule.exports = Channel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/channel.js\n// module id = 5\n// module chunks = 0","/**\n * {@link https://api.slack.com/types/im|DM}\n */\n\nvar inherits = require('inherits');\n\nvar BaseChannel = require('./base-channel');\n\n\nfunction DM(opts) {\n  BaseChannel.call(this, 'DM', opts);\n}\n\ninherits(DM, BaseChannel);\n\n\nmodule.exports = DM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/dm.js\n// module id = 6\n// module chunks = 0","/**\n *\n */\n\nvar inherits = require('inherits');\n\nvar Model = require('./model');\n\n\nfunction File(opts) {\n  Model.call(this, 'File', opts);\n}\n\ninherits(File, Model);\n\n\nmodule.exports = File;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/file.js\n// module id = 7\n// module chunks = 0","/**\n * {@link https://api.slack.com/types/group|Group}\n */\n\nvar inherits = require('inherits');\n\nvar ChannelGroup = require('./channel-group');\n\n\nfunction Group(opts) {\n  ChannelGroup.call(this, 'Group', opts);\n}\n\ninherits(Group, ChannelGroup);\n\n\nmodule.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/group.js\n// module id = 8\n// module chunks = 0","/**\n *\n */\n\nvar inherits = require('inherits');\n\nvar ChannelGroup = require('./channel-group');\n\n\nfunction MPDM(opts) {\n  ChannelGroup.call(this, 'MPDM', opts);\n}\n\ninherits(MPDM, ChannelGroup);\n\n\nmodule.exports = MPDM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/mpdm.js\n// module id = 9\n// module chunks = 0","/**\n *\n */\n\nvar inherits = require('inherits');\n\nvar Model = require('./model');\n\n\nfunction UserGroup(opts) {\n  Model.call(this, 'UserGroup', opts);\n}\n\ninherits(UserGroup, Model);\n\n\nmodule.exports = UserGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/user-group.js\n// module id = 10\n// module chunks = 0","/**\n *\n */\n\nvar inherits = require('inherits');\n\nvar Model = require('./model');\n\n\nfunction User(opts) {\n  Model.call(this, 'User', opts);\n}\n\ninherits(User, Model);\n\n\nmodule.exports = User;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/user.js\n// module id = 11\n// module chunks = 0","module.exports = {\n  Channel: require('./channel'),\n  DM: require('./dm'),\n  File: require('./file'),\n  Group: require('./group'),\n  MPDM: require('./mpdm'),\n  User: require('./user'),\n  UserGroup: require('./user-group')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/index.js\n// module id = 12\n// module chunks = 0","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"@slack/client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@slack/client\"\n// module id = 14\n// module chunks = 0","var hasKey = require('lodash').has;\n\n// Channel, file, group, DM, user, usergroup\nvar RECOGNIZED_API_TYPE_PREFIXES = ['C', 'F', 'G', 'D', 'U', 'S'];\n\n\n/**\n * Tests whether a supplied JSON object represents a Slack API type.\n * @param {Object} obj\n * @returns {boolean}\n */\nvar isModelObj = function isModelObj(obj) {\n  if (hasKey(obj, 'id')) {\n    return RECOGNIZED_API_TYPE_PREFIXES.indexOf(obj.id.substr(0, 1)) !== -1;\n  }\n\n  return false;\n};\n\n\n/**\n * Returns the model class for the JSON object from the Slack API.\n */\nvar getModelClass = function getModelClass(obj) {\n  var modelClass;\n  var apiTypePrefix = obj.id.substr(0, 1);\n\n  if (apiTypePrefix === 'C') {\n    modelClass = require('./channel');\n  } else if (apiTypePrefix === 'F') {\n    modelClass = require('./file');\n  } else if (apiTypePrefix === 'D') {\n    modelClass = require('./dm');\n  } else if (apiTypePrefix === 'U') {\n    modelClass = require('./user');\n  } else if (apiTypePrefix === 'S') {\n    modelClass = require('./user-group');\n  } else {\n    // The MPDM and Group classes share the same prefix, so do an extra check here\n    if (apiTypePrefix === 'G') {\n      if (obj.is_mpim) {\n        modelClass = require('./mpdm');\n      }\n\n      if (obj.is_group) {\n        modelClass = require('./group');\n      }\n    }\n  }\n\n  return modelClass;\n};\n\n\nmodule.exports.isModelObj = isModelObj;\nmodule.exports.getModelClass = getModelClass;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/helpers.js\n// module id = 15\n// module chunks = 0","var PROPERTY_TYPES = {\n  SIMPLE: 0,\n  MODEL: 1,\n  MODEL_ARRAY: 2\n};\n\nmodule.exports = PROPERTY_TYPES;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@slack/client/lib/models/property-type.js\n// module id = 16\n// module chunks = 0","import {\n  RtmClient,\n  CLIENT_EVENTS,\n  RTM_EVENTS,\n  //MemoryDataStore,\n} from '@slack/client';\n\nimport models from '@slack/client/lib/models';\n\nimport { Adapter, User } from '@exoplay/exobot';\n\nconst dmName = new models.DM()._modelName;\n\nexport const EVENTS = {\n  [CLIENT_EVENTS.RTM.CONNECTING]: 'slackConnecting',\n  [CLIENT_EVENTS.RTM.RTM_CONNECTION_OPENED]: 'slackConnected',\n  [CLIENT_EVENTS.RTM.AUTHENTICATED]: 'slackAuthenticated',\n  [CLIENT_EVENTS.RTM.DISCONNECT]: 'slackDisconnected',\n  [CLIENT_EVENTS.RTM.UNABLE_TO_RTM_START]: 'slackUnableToStart',\n  [CLIENT_EVENTS.RTM.ATTEMPTING_RECONNECT]: 'slackReconnecting',\n  [RTM_EVENTS.MESSAGE]: 'slackMessage',\n};\n\nexport class SlackAdapter extends Adapter {\n  name = 'Slack';\n\n  constructor ({ token }) {\n    super(...arguments);\n    this.token = token;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n    const { token } = this;\n\n    this.client = new RtmClient(token, { logLevel: bot.logLevel });\n\n    Object.keys(EVENTS).forEach(slackEvent => {\n      const mappedFn = this[EVENTS[slackEvent]];\n      this.client.on(slackEvent, (...args) => mappedFn(...args));\n      this.client.on(slackEvent, (...args) => {\n        bot.emitter.emit(`slack-${slackEvent}`, ...args);\n      });\n    });\n\n    this.client.start();\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n    this.client.sendMessage(message.text, message.channel);\n  }\n\n  slackConnecting = () => {\n    this.bot.log.info('Connecting to Slack.');\n    this.status = Adapter.STATUS.CONNECTING;\n  }\n\n  slackConnected = () => {\n    this.bot.log.info('Connected to Slack.');\n  }\n\n  slackAuthenticated = () => {\n    this.bot.log.notice('Successfully authenticated to Slack.');\n    this.status = Adapter.STATUS.CONNECTED;\n  }\n\n  slackDisconnected = () => {\n    this.bot.log.critical('Disconnected from Slack.');\n    this.status = Adapter.STATUS.DISCONNECTED;\n  }\n\n  slackUnableToStart = () => {\n    this.bot.log.critical('Unable to start Slack.');\n    this.status = Adapter.STATUS.DISCONNECTED;\n  }\n\n  slackReconnecting = () => {\n    this.bot.log.notice('Reconnecting to Slack.');\n    this.status = Adapter.STATUS.RECONNECTING;\n  }\n\n  slackMessage = (message) => {\n    const botId = this.client.activeUserId;\n    if (message.user === botId) { return; }\n\n    const slackUser = this.client.dataStore.getUserById(message.user);\n    let user;\n\n    if (slackUser) {\n      user = new User(slackUser.name, slackUser.id);\n    } else {\n      user = new User(message.user);\n    }\n\n    const channel = this.client.dataStore.getChannelGroupOrDMById(message.channel);\n\n    if (channel && channel._modelName === dmName) {\n      return this.receiveWhisper({ user, text: message.text, channel: message.channel });\n    }\n\n    this.receive({ user, text: message.text, channel: message.channel });\n  }\n\n  getUserIdByUserName (name) {\n    return this.client.dataStore.getUserByName(name).id;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/slack.js"],"sourceRoot":""}